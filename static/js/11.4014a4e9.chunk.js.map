{"version":3,"sources":["NavBar.js"],"names":["DropdownNavBar","lazy","Promise","all","__webpack_require__","e","then","bind","LinearNavBar","NavBar","forwardRef","_ref","ref","sb","showVideo","handleShowVideo","isMobile","_useState","useState","window","innerWidth","_useState2","Object","C_Users_charm_Documents_GitHub_Personal_Website_V0_mywebsite_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","resize","handleResize","_useState3","_useState4","clicked","handleClick","useImperativeHandle","scroll","scrollFunction","useEffect","addEventListener","resizeFunction","removeEventListener","showBar","navbar","style","backgroundColor","opacity","hideNavBar","hideDropdownBar","hideDropdownMenu","dropdown","visibility","scrollUp","document","getElementById","body","contains","current","getScrollTop","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_1__","fallback","_Load__WEBPACK_IMPORTED_MODULE_4__"],"mappings":"oJASMA,EAAiBC,eAAK,kBAAIC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,MAAAC,KAAAF,EAAAG,KAAA,aAC1BC,EAAeP,eAAK,kBAAIC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,MAAAC,KAAAF,EAAAG,KAAA,aAExBE,EAASC,qBACX,SAAAC,EAA6CC,GAAQ,IAAnDC,EAAmDF,EAAnDE,GAAIC,EAA+CH,EAA/CG,UAAWC,EAAoCJ,EAApCI,gBAAiBC,EAAmBL,EAAnBK,SAAmBC,EACtBC,mBAAUC,OAAOC,YAAc,MADTC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAC9CO,EAD8CH,EAAA,GACtCI,EADsCJ,EAAA,GAAAK,EAEtBR,oBAAS,GAFaS,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAE9CE,EAF8CD,EAAA,GAErCE,EAFqCF,EAAA,GAIrDG,8BAAoBlB,EAAK,iBAAO,CAC5BmB,OAAQ,WACJC,QAIRC,oBAAU,WACND,KACD,CAACR,IAGJS,oBAAU,WAGN,OAFAd,OAAOe,iBAAiB,SAAUC,GAE1B,WACJhB,OAAOiB,oBAAoB,SAAUD,MAI7C,IAAME,EAAU,SAACC,GACbA,EAAOC,MAAMC,gBAAkB,QAC/BF,EAAOC,MAAME,QAAQ,GAGnBC,EAAa,SAACJ,GAChBA,EAAOC,MAAMC,gBAAkB,cAC/BF,EAAOC,MAAME,QAAQ,IAGnBE,EAAkB,SAACL,GACrBA,EAAOC,MAAME,QAAQ,IAGnBG,EAAmB,SAACC,GACtBA,EAASN,MAAMC,gBAAkB,QACjCK,EAASN,MAAMO,WAAW,SAC1BD,EAASN,MAAME,QAAQ,GAGrBT,EAAiB,WACnB,IAEIM,EAFAS,EAAWC,SAASC,eAAe,aAGpCD,SAASE,KAAKC,SAASH,SAASC,eAAe,QAC9CX,EAASU,SAASC,eAAe,MAC7BpC,EAAGuC,QAAQC,eAAiB,IAAOhB,EAAQC,GACxCI,EAAWJ,IAEbU,SAASE,KAAKC,SAASH,SAASC,eAAe,qBACpDX,EAASU,SAASC,eAAe,kBAC7BpC,EAAGuC,QAAQC,eAAiB,IAAOhB,EAAQC,GACrCV,GAAWe,EAAgBL,IAGrCzB,EAAGuC,QAAQC,eAAiB,KAC5BN,EAASR,MAAMO,WAAa,UAC5BC,EAASR,MAAME,QAAU,IAGzBM,EAASR,MAAME,QAAU,EACzBM,EAASR,MAAMO,WAAa,WAM9BX,EAAiB,WAEnB,GADAN,GAAY,GACTV,OAAOC,YAAc,MAEpB,GADAK,GAAa,GACVuB,SAASE,KAAKC,SAASH,SAASC,eAAe,YAAa,CAC3D,IAAMJ,EAAWG,SAASC,eAAe,WACzCL,EAAiBC,SAIrBpB,GAAa,GACbO,KAIR,OACKR,GAAUL,OAAOC,YAAc,KAChCkC,EAAAC,EAAAC,cAACC,EAAA,SAAD,CAAUC,SAAUJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,OAChBL,EAAAC,EAAAC,cAACxD,EAAD,CACIa,GAAIA,EACJC,UAAWA,EACXC,gBAAiBA,EACjBa,QAASA,EACTC,YAAaA,EACbc,gBAAiBA,EACjBC,iBAAkBA,EAClBP,QAASA,EACTL,eAAgBA,EAChBhB,SAAUA,KAElBsC,EAAAC,EAAAC,cAACC,EAAA,SAAD,CAAUC,SAAUJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,OAChBL,EAAAC,EAAAC,cAAChD,EAAD,CACIK,GAAIA,EACJC,UAAWA,EACXC,gBAAiBA,EACjBsB,QAASA,EACTK,WAAYA,EACZV,eAAgBA,EAChBhB,SAAUA,OAKXP","file":"static/js/11.4014a4e9.chunk.js","sourcesContent":["import React, { useState, useEffect, useImperativeHandle, forwardRef, lazy, Suspense } from 'react';\nimport './CSS/index.css';\nimport './CSS/header_footer.css';\n\n// import DropdownNavBar from './DropdownNavBar';\n// import LinearNavBar from './LinearNavBar';\n\nimport { BlackBar } from './Load';\n\nconst DropdownNavBar = lazy(()=>import('./DropdownNavBar'));\nconst LinearNavBar = lazy(()=>import('./LinearNavBar'));\n\nconst NavBar = forwardRef( \n    ({sb, showVideo, handleShowVideo, isMobile}, ref) => {\n    const [resize, handleResize] = useState( window.innerWidth <= 1024 ? true:false);\n    const [clicked, handleClick] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        scroll: () => {\n            scrollFunction();\n        }\n    }));\n\n    useEffect(()=> {\n        scrollFunction();\n    }, [resize])\n\n\n    useEffect(() => {\n        window.addEventListener('resize', resizeFunction);       \n\n        return (()=> {\n            window.removeEventListener('resize', resizeFunction);\n        })\n    });\n    \n    const showBar = (navbar) => {\n        navbar.style.backgroundColor = \"black\";\n        navbar.style.opacity=1;\n    }\n\n    const hideNavBar = (navbar) => {\n        navbar.style.backgroundColor = \"transparent\";\n        navbar.style.opacity=0.5;\n    }\n\n    const hideDropdownBar = (navbar) => {\n        navbar.style.opacity=0.5;\n    }\n\n    const hideDropdownMenu = (dropdown) => {\n        dropdown.style.backgroundColor = \"black\";\n        dropdown.style.visibility=\"hidden\";\n        dropdown.style.opacity=0;\n    }\n\n    const scrollFunction = () => {\n        let scrollUp = document.getElementById(\"scrollTop\");\n\n        let navbar;\n        if(document.body.contains(document.getElementById('nb'))) {\n            navbar = document.getElementById(\"nb\");\n            if (sb.current.getScrollTop() > 200) { showBar(navbar); }\n            else { hideNavBar(navbar); }\n        } \n        else if (document.body.contains(document.getElementById('placeholderBar'))) {\n            navbar = document.getElementById(\"placeholderBar\")\n            if (sb.current.getScrollTop() > 200) { showBar(navbar); }\n            else if (!clicked) { hideDropdownBar(navbar); }\n        }\n\n        if (sb.current.getScrollTop() > 200) {\n            scrollUp.style.visibility = \"visible\";\n            scrollUp.style.opacity = 1;\n        }\n        else {\n            scrollUp.style.opacity = 0;\n            scrollUp.style.visibility = \"hidden\";\n            \n        }\n    };\n\n\n    const resizeFunction = () => {\n        handleClick(false);\n        if(window.innerWidth <= 1024) {\n            handleResize(true);\n            if(document.body.contains(document.getElementById('drop_nb'))) {\n                const dropdown = document.getElementById(\"drop_nb\");\n                hideDropdownMenu(dropdown);\n            }\n        }\n        else {\n            handleResize(false);\n            scrollFunction();\n        }\n    }\n    \n    return (\n        (resize || window.innerWidth <= 1024) ? \n        <Suspense fallback={<BlackBar />} >\n            <DropdownNavBar \n                sb={sb}\n                showVideo={showVideo}\n                handleShowVideo={handleShowVideo}\n                clicked={clicked}\n                handleClick={handleClick}\n                hideDropdownBar={hideDropdownBar} \n                hideDropdownMenu={hideDropdownMenu}\n                showBar={showBar}\n                scrollFunction={scrollFunction}\n                isMobile={isMobile}/>\n        </Suspense>: \n        <Suspense fallback={<BlackBar />}>\n            <LinearNavBar\n                sb={sb}\n                showVideo={showVideo}\n                handleShowVideo={handleShowVideo}\n                showBar={showBar}\n                hideNavBar={hideNavBar}\n                scrollFunction={scrollFunction}\n                isMobile={isMobile} />\n        </Suspense>\n    )\n}); \n\nexport default NavBar;"],"sourceRoot":""}